
-- Top level contract declaration
DContr. Contr ::= "contract" Ident "(" [Ident] ")" "=" "{" Proc "}" ;

separator nonempty Ident "," ;

-- Processes
PNil.    Proc ::= "Nil" ;
PInput.  Proc ::= "for" "(" [Bind] ")" "{" Proc "}" ;
PChoice. Proc ::= "select" "{" [CBranch] "}" ;
-- PMatch.  Proc ::= "match" Proc "{" [PMBranch] "}" ;
POutput. Proc ::= Chan "!" "(" [Ident] ")" ; -- should be Proc instead of Ident
PPar.    Proc ::= Proc "|" Proc ;
PDrop.   Proc ::= "*" Proc ;
PNew.    Proc ::= "new" [Ident] "in" Proc ;
PConstr. Proc ::= Ident "(" [Ident] ")" ; -- should be Proc instead of Ident
PValue.  Proc ::= Value ;
separator nonempty Proc "," ; -- Might make sense to not have this nonempty, to allow pure synchronization?

-- PatternMatch. PMBranch ::= Pattern "=>" Proc ;
-- separator nonempty PMBranch ";" ; 

Choice. CBranch ::= "case" [Bind] "=>" "{" Proc "}" ;
separator nonempty CBranch "" ;

-- Variable binding
Bind. Bind ::= Ident "<-" Chan ;
separator nonempty Bind ";" ;

-- Channels
ChanAddr. Chan ::= Addr ;
ChanVar.  Chan ::= Ident ;

-- AddrHash. Addr ::= Hash ;
AddrLift. Addr ::= "@" Proc ;

VQuant.   Value    ::= Quantity ;
VEnt.     Value    ::= Entity ;
-- QBool.    Quantity ::= Boolean ;
QInt.     Quantity ::= Integer ;
QDouble.  Quantity ::= Double ;
EChar.    Entity   ::= Char ;
-- EDate.    Entity   ::= Datetime ;
EStruct.  Entity   ::= Struct ;
ECollect. Entity   ::= Collect ;

Struct. Struct ::= Ident "{" [Proc] "}" ;

CString. Collect ::= String ;
-- CArray.  Collect ::= Array ;
-- CList.   Collect ::= List ;